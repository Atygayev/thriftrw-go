
state 0
	$accept: .program $end 
	headers: .    (2)

	.  reduce 2 (src line 85)

	program  goto 1
	headers  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  headers.definitions 
	headers:  headers.header 
	definitions: .    (7)
	lineno: .    (40)

	NAMESPACE  reduce 40 (src line 215)
	INCLUDE  reduce 40 (src line 215)
	.  reduce 7 (src line 116)

	lineno  goto 5
	header  goto 4
	definitions  goto 3

state 3
	program:  headers definitions.    (1)
	definitions:  definitions.definition 
	lineno: .    (40)

	$end  reduce 1 (src line 67)
	.  reduce 40 (src line 215)

	lineno  goto 7
	definition  goto 6

state 4
	headers:  headers header.    (3)

	.  reduce 3 (src line 87)


state 5
	header:  lineno.INCLUDE LITERAL 
	header:  lineno.NAMESPACE '*' IDENTIFIER 
	header:  lineno.NAMESPACE IDENTIFIER IDENTIFIER 

	NAMESPACE  shift 9
	INCLUDE  shift 8
	.  error


state 6
	definitions:  definitions definition.    (8)

	.  reduce 8 (src line 118)


state 7
	definition:  lineno.CONST type IDENTIFIER '=' const_value optional_sep 
	definition:  lineno.TYPEDEF type IDENTIFIER type_annotations optional_sep 

	TYPEDEF  shift 11
	CONST  shift 10
	.  error


state 8
	header:  lineno INCLUDE.LITERAL 

	LITERAL  shift 12
	.  error


state 9
	header:  lineno NAMESPACE.'*' IDENTIFIER 
	header:  lineno NAMESPACE.IDENTIFIER IDENTIFIER 

	IDENTIFIER  shift 14
	'*'  shift 13
	.  error


state 10
	definition:  lineno CONST.type IDENTIFIER '=' const_value optional_sep 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 15
	base_type_name  goto 16

state 11
	definition:  lineno TYPEDEF.type IDENTIFIER type_annotations optional_sep 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 29
	base_type_name  goto 16

state 12
	header:  lineno INCLUDE LITERAL.    (4)

	.  reduce 4 (src line 90)


state 13
	header:  lineno NAMESPACE '*'.IDENTIFIER 

	IDENTIFIER  shift 30
	.  error


state 14
	header:  lineno NAMESPACE IDENTIFIER.IDENTIFIER 

	IDENTIFIER  shift 31
	.  error


state 15
	definition:  lineno CONST type.IDENTIFIER '=' const_value optional_sep 

	IDENTIFIER  shift 32
	.  error


state 16
	type:  base_type_name.type_annotations 
	type_annotations: .    (36)

	'('  shift 34
	.  reduce 36 (src line 194)

	type_annotations  goto 33

state 17
	type:  MAP.'<' type ',' type '>' type_annotations 

	'<'  shift 35
	.  error


state 18
	type:  LIST.'<' type '>' type_annotations 

	'<'  shift 36
	.  error


state 19
	type:  SET.'<' type '>' type_annotations 

	'<'  shift 37
	.  error


state 20
	type:  lineno.IDENTIFIER 

	IDENTIFIER  shift 38
	.  error


state 21
	base_type_name:  BOOL.    (16)

	.  reduce 16 (src line 158)


state 22
	base_type_name:  BYTE.    (17)

	.  reduce 17 (src line 160)


state 23
	base_type_name:  I16.    (18)

	.  reduce 18 (src line 161)


state 24
	base_type_name:  I32.    (19)

	.  reduce 19 (src line 162)


state 25
	base_type_name:  I64.    (20)

	.  reduce 20 (src line 163)


state 26
	base_type_name:  DOUBLE.    (21)

	.  reduce 21 (src line 164)


state 27
	base_type_name:  STRING.    (22)

	.  reduce 22 (src line 165)


state 28
	base_type_name:  BINARY.    (23)

	.  reduce 23 (src line 166)


state 29
	definition:  lineno TYPEDEF type.IDENTIFIER type_annotations optional_sep 

	IDENTIFIER  shift 39
	.  error


state 30
	header:  lineno NAMESPACE '*' IDENTIFIER.    (5)

	.  reduce 5 (src line 98)


state 31
	header:  lineno NAMESPACE IDENTIFIER IDENTIFIER.    (6)

	.  reduce 6 (src line 106)


state 32
	definition:  lineno CONST type IDENTIFIER.'=' const_value optional_sep 

	'='  shift 40
	.  error


state 33
	type:  base_type_name type_annotations.    (11)

	.  reduce 11 (src line 143)


state 34
	type_annotations:  '('.type_annotation_list ')' 
	type_annotation_list: .    (38)

	.  reduce 38 (src line 199)

	type_annotation_list  goto 41

state 35
	type:  MAP '<'.type ',' type '>' type_annotations 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 42
	base_type_name  goto 16

state 36
	type:  LIST '<'.type '>' type_annotations 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 43
	base_type_name  goto 16

state 37
	type:  SET '<'.type '>' type_annotations 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 44
	base_type_name  goto 16

state 38
	type:  lineno IDENTIFIER.    (15)

	.  reduce 15 (src line 154)


state 39
	definition:  lineno TYPEDEF type IDENTIFIER.type_annotations optional_sep 
	type_annotations: .    (36)

	'('  shift 34
	.  reduce 36 (src line 194)

	type_annotations  goto 45

state 40
	definition:  lineno CONST type IDENTIFIER '='.const_value optional_sep 
	lineno: .    (40)

	LITERAL  shift 51
	INTCONSTANT  shift 47
	DUBCONSTANT  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'['  shift 53
	'{'  shift 54
	.  reduce 40 (src line 215)

	lineno  goto 52
	const_value  goto 46

state 41
	type_annotations:  '(' type_annotation_list.')' 
	type_annotation_list:  type_annotation_list.lineno IDENTIFIER '=' LITERAL optional_sep 
	lineno: .    (40)

	')'  shift 55
	.  reduce 40 (src line 215)

	lineno  goto 56

state 42
	type:  MAP '<' type.',' type '>' type_annotations 

	','  shift 57
	.  error


state 43
	type:  LIST '<' type.'>' type_annotations 

	'>'  shift 58
	.  error


state 44
	type:  SET '<' type.'>' type_annotations 

	'>'  shift 59
	.  error


state 45
	definition:  lineno TYPEDEF type IDENTIFIER type_annotations.optional_sep 
	optional_sep: .    (43)

	','  shift 61
	';'  shift 62
	.  reduce 43 (src line 222)

	optional_sep  goto 60

state 46
	definition:  lineno CONST type IDENTIFIER '=' const_value.optional_sep 
	optional_sep: .    (43)

	','  shift 61
	';'  shift 62
	.  reduce 43 (src line 222)

	optional_sep  goto 63

state 47
	const_value:  INTCONSTANT.    (24)

	.  reduce 24 (src line 169)


state 48
	const_value:  DUBCONSTANT.    (25)

	.  reduce 25 (src line 171)


state 49
	const_value:  TRUE.    (26)

	.  reduce 26 (src line 172)


state 50
	const_value:  FALSE.    (27)

	.  reduce 27 (src line 173)


state 51
	const_value:  LITERAL.    (28)

	.  reduce 28 (src line 174)


state 52
	const_value:  lineno.IDENTIFIER 

	IDENTIFIER  shift 64
	.  error


state 53
	const_value:  '['.const_list_items ']' 
	const_list_items: .    (32)

	.  reduce 32 (src line 182)

	const_list_items  goto 65

state 54
	const_value:  '{'.const_map_items '}' 
	const_map_items: .    (34)

	.  reduce 34 (src line 188)

	const_map_items  goto 66

state 55
	type_annotations:  '(' type_annotation_list ')'.    (37)

	.  reduce 37 (src line 196)


state 56
	type_annotation_list:  type_annotation_list lineno.IDENTIFIER '=' LITERAL optional_sep 

	IDENTIFIER  shift 67
	.  error


state 57
	type:  MAP '<' type ','.type '>' type_annotations 
	lineno: .    (40)

	BOOL  shift 21
	BYTE  shift 22
	I16  shift 23
	I32  shift 24
	I64  shift 25
	DOUBLE  shift 26
	STRING  shift 27
	BINARY  shift 28
	MAP  shift 17
	LIST  shift 18
	SET  shift 19
	.  reduce 40 (src line 215)

	lineno  goto 20
	type  goto 68
	base_type_name  goto 16

state 58
	type:  LIST '<' type '>'.type_annotations 
	type_annotations: .    (36)

	'('  shift 34
	.  reduce 36 (src line 194)

	type_annotations  goto 69

state 59
	type:  SET '<' type '>'.type_annotations 
	type_annotations: .    (36)

	'('  shift 34
	.  reduce 36 (src line 194)

	type_annotations  goto 70

state 60
	definition:  lineno TYPEDEF type IDENTIFIER type_annotations optional_sep.    (10)

	.  reduce 10 (src line 132)


state 61
	optional_sep:  ','.    (41)

	.  reduce 41 (src line 219)


state 62
	optional_sep:  ';'.    (42)

	.  reduce 42 (src line 221)


state 63
	definition:  lineno CONST type IDENTIFIER '=' const_value optional_sep.    (9)

	.  reduce 9 (src line 122)


state 64
	const_value:  lineno IDENTIFIER.    (29)

	.  reduce 29 (src line 175)


state 65
	const_value:  '[' const_list_items.']' 
	const_list_items:  const_list_items.const_value optional_sep 
	lineno: .    (40)

	LITERAL  shift 51
	INTCONSTANT  shift 47
	DUBCONSTANT  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'['  shift 53
	']'  shift 71
	'{'  shift 54
	.  reduce 40 (src line 215)

	lineno  goto 52
	const_value  goto 72

state 66
	const_value:  '{' const_map_items.'}' 
	const_map_items:  const_map_items.const_value ':' const_value optional_sep 
	lineno: .    (40)

	LITERAL  shift 51
	INTCONSTANT  shift 47
	DUBCONSTANT  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'['  shift 53
	'{'  shift 54
	'}'  shift 73
	.  reduce 40 (src line 215)

	lineno  goto 52
	const_value  goto 74

state 67
	type_annotation_list:  type_annotation_list lineno IDENTIFIER.'=' LITERAL optional_sep 

	'='  shift 75
	.  error


state 68
	type:  MAP '<' type ',' type.'>' type_annotations 

	'>'  shift 76
	.  error


state 69
	type:  LIST '<' type '>' type_annotations.    (13)

	.  reduce 13 (src line 150)


state 70
	type:  SET '<' type '>' type_annotations.    (14)

	.  reduce 14 (src line 152)


state 71
	const_value:  '[' const_list_items ']'.    (30)

	.  reduce 30 (src line 178)


state 72
	const_list_items:  const_list_items const_value.optional_sep 
	optional_sep: .    (43)

	','  shift 61
	';'  shift 62
	.  reduce 43 (src line 222)

	optional_sep  goto 77

state 73
	const_value:  '{' const_map_items '}'.    (31)

	.  reduce 31 (src line 179)


state 74
	const_map_items:  const_map_items const_value.':' const_value optional_sep 

	':'  shift 78
	.  error


state 75
	type_annotation_list:  type_annotation_list lineno IDENTIFIER '='.LITERAL optional_sep 

	LITERAL  shift 79
	.  error


state 76
	type:  MAP '<' type ',' type '>'.type_annotations 
	type_annotations: .    (36)

	'('  shift 34
	.  reduce 36 (src line 194)

	type_annotations  goto 80

state 77
	const_list_items:  const_list_items const_value optional_sep.    (33)

	.  reduce 33 (src line 184)


state 78
	const_map_items:  const_map_items const_value ':'.const_value optional_sep 
	lineno: .    (40)

	LITERAL  shift 51
	INTCONSTANT  shift 47
	DUBCONSTANT  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'['  shift 53
	'{'  shift 54
	.  reduce 40 (src line 215)

	lineno  goto 52
	const_value  goto 81

state 79
	type_annotation_list:  type_annotation_list lineno IDENTIFIER '=' LITERAL.optional_sep 
	optional_sep: .    (43)

	','  shift 61
	';'  shift 62
	.  reduce 43 (src line 222)

	optional_sep  goto 82

state 80
	type:  MAP '<' type ',' type '>' type_annotations.    (12)

	.  reduce 12 (src line 148)


state 81
	const_map_items:  const_map_items const_value ':' const_value.optional_sep 
	optional_sep: .    (43)

	','  shift 61
	';'  shift 62
	.  reduce 43 (src line 222)

	optional_sep  goto 83

state 82
	type_annotation_list:  type_annotation_list lineno IDENTIFIER '=' LITERAL optional_sep.    (39)

	.  reduce 39 (src line 201)


state 83
	const_map_items:  const_map_items const_value ':' const_value optional_sep.    (35)

	.  reduce 35 (src line 190)


48 terminals, 15 nonterminals
44 grammar rules, 84/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
64 working sets used
memory: parser 49/30000
47 extra closures
137 shift entries, 4 exceptions
37 goto entries
10 entries saved by goto default
Optimizer space used: output 113/30000
113 table entries, 13 zero
maximum spread: 48, maximum offset: 81
